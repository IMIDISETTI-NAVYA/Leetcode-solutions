class Solution {
public:
    int findCircleNum(vector<vector<int>>& isConnected) {
        int n = isConnected.size();
        vector<vector<int>> adj(n);
        vector<bool> vis(n, false);
        int ans = 0;

        for(int i = 0; i < n ; i++) {
            for(int j = 0 ; j < n ; j++) {
                if(isConnected[i][j] == 1 && i != j) {
                    adj[i].push_back(j);
                    adj[j].push_back(i);
                }
            }
        }

        for(int i = 0; i < n; i++) {
            if(!vis[i]) {
                ans++;
                dfs(i, adj, vis);
            }
        }
        return ans;
    }

    void dfs(int node, vector<vector<int>>& adj, vector<bool>& vis) {
        vis[node] = true;
        for(auto x : adj[node]) {
            if(!vis[x]) dfs(x, adj, vis);
        }
    }
};
